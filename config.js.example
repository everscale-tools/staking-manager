module.exports = {
    everos: {
        network: {
            endpoints: ['https://net1.ton.dev', 'https://net5.ton.dev']
        }
    },

    wallet: {
        addr: '-1:dc98905c2ff4356331a7c4134956aa257600cf9c54e43f23f438470a3703df92',
        keys: {
            public: 'c89b32a11ec837298731ebbd2176f0cf96dab52f978d6cbe198fafeafaaa0fc5',
            secret: '4a579ee59f540e325e2d0dad600f412c04cf80fae2ae25294a32e7412385787c'
        }
    },

    funding: {
        type: <'wallet'|'depool'>,

        // in case of 'wallet'
        defaultStake: 3500001, // in EVERs

        // in case of 'depool'
        addr: '0:2de8d63dc6169913cb734fa8effca16fa8c4fd2550834c1b9196d8a690f6e182'
    },

    console: {
        client: {
            privateKey: '<private key, public counterpart of which is passed to the node with "--ckey" arg>'
        },
        server: {
            host: '1.2.3.4',
            port: 3031,
            publicKey: '<public key of the controlling server, generated by the node>'
        },
        maximizeUsage: true // 'true' means that most of the work will be done
                            // through utilization of the node capabilities;
                            // usage of EverOS (DApp servers) is minimized in this case.
    },

    datastore: {
        config: '/data/everscale-staking-manager/config.db',
        elections: '/data/everscale-staking-manager/elections.db'
    },

    participationConfirmationTimeout: 3600, // minimal value of pause before attempting to send the stake again
                                            // in case of absence of participation confirmation from Elector
                                            // (this value is expected to exceed periodicJobs.sendStake period)

    periodicJobs: {
        enabled: true,
        acceptableTimeDiff: -10,
        sendStake: '*/15 * * * *',
        recoverStake: '0 0 1 1 *' // adjust in case of 'wallet' funding
    }
}
